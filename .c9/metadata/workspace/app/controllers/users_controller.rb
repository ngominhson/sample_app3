{"filter":false,"title":"users_controller.rb","tooltip":"/app/controllers/users_controller.rb","undoManager":{"mark":10,"position":10,"stack":[[{"group":"doc","deltas":[{"start":{"row":12,"column":4},"end":{"row":16,"column":8},"action":"remove","lines":["if @user.save","      log_in @user","    \tflash[:success] = \"Welcome to the Sample App!\"","      redirect_to @user","    else"]},{"start":{"row":12,"column":4},"end":{"row":16,"column":8},"action":"insert","lines":["if @user.save","      UserMailer.account_activation(@user).deliver_now","      flash[:info] = \"Please check your email to activate your account.\"","      redirect_to root_url","    else"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":6},"end":{"row":13,"column":54},"action":"remove","lines":["UserMailer.account_activation(@user).deliver_now"]},{"start":{"row":13,"column":6},"end":{"row":13,"column":33},"action":"insert","lines":["@user.send_activation_email"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":2},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":2},"end":{"row":4,"column":5},"action":"insert","lines":[" def index","    @users = User.where(activated: FILL_IN).paginate(page: params[:page])","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":34},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":4},"end":{"row":7,"column":50},"action":"insert","lines":["redirect_to root_url and return unless FILL_IN"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":9,"column":0},"end":{"row":11,"column":9},"action":"remove","lines":["  end","","  def new"]},{"start":{"row":9,"column":0},"end":{"row":15,"column":12},"action":"insert","lines":["=======","  before_action :logged_in_user, only: [:index, :edit, :update, :destroy,","                                        :following, :followers]","  before_action :correct_user,   only: [:edit, :update]","  before_action :admin_user,     only: :destroy","","   def index"]},{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"insert","lines":["s"]},{"start":{"row":16,"column":18},"end":{"row":36,"column":0},"action":"remove","lines":["new","  end","","  def create","    @user = User.new(user_params)   # Not the final implementation!","    if @user.save","      @user.send_activation_email","      flash[:info] = \"Please check your email to activate your account.\"","      redirect_to root_url","    else","      render 'new'","    end","  end","","  private","","    def user_params","      params.require(:user).permit(:name, :email, :password,","                                   :password_confirmation)","    end",""]},{"start":{"row":16,"column":18},"end":{"row":99,"column":7},"action":"insert","lines":["where(activated: FILL_IN).paginate(page: params[:page])","  end","","  def show","    @user = User.find(params[:id])","    @microposts = @user.microposts.paginate(page: params[:page])",">>>>>>> e95c9570e92cf4d671da9c79d194911d8f7b2b67","  end","","  def new","    @user = User.new","  end","","  def index","    @users = User.paginate(page: params[:page])","  end","","  def create","    @user = User.new(user_params)","    if @user.save","      @user.send_activation_email","      flash[:info] = \"Please check your email to activate your account.\"","      redirect_to root_url","    else","      render 'new'","    end","  end","","  def destroy","    User.find(params[:id]).destroy","    flash[:success] = \"User deleted\"","    redirect_to users_url","  end","","  def edit","    @user = User.find(params[:id])","  end","","  def update","    @user = User.find(params[:id])","    if @user.update_attributes(user_params)","      flash[:success] = \"Profile updated\"","      redirect_to @user","    else","      render 'edit'","    end","  end","","   def following","    @title = \"Following\"","    @user  = User.find(params[:id])","    @users = @user.following.paginate(page: params[:page])","    render 'show_follow'","  end","","  def followers","    @title = \"Followers\"","    @user  = User.find(params[:id])","    @users = @user.followers.paginate(page: params[:page])","    render 'show_follow'","  end","","  private","","    def user_params","      params.require(:user).permit(:name, :email, :password,","                                   :password_confirmation)","    end","","","    # Confirms a logged-in user.","    def logged_in_user","      unless logged_in?","        store_location","        flash[:danger] = \"Please log in.\"","        redirect_to login_url","      end","    end","","    # Confirms the correct user.","    def correct_user","      @user = User.find(params[:id])","      redirect_to(root_url) unless current_user?(@user)","    end"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":9,"column":7},"action":"remove","lines":["<<<<<<< HEAD","  ","   def index","    @users = User.where(activated: FILL_IN).paginate(page: params[:page])","  end","  def show","    @user = User.find(params[:id])","    redirect_to root_url and return unless FILL_IN","======="]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":45},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":13,"column":48},"action":"remove","lines":[">>>>>>> e95c9570e92cf4d671da9c79d194911d8f7b2b67"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":64},"end":{"row":13,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":1068,"scrollleft":0,"selection":{"start":{"row":12,"column":64},"end":{"row":12,"column":64},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":75,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1426180171518,"hash":"b2bd8876b48ee48ae993093b0d8c6e8442c6324d"}